extend type Query {
    #生产任务列表
    tasks(taskCondition:TaskCondition,page:Page):TaskPageResult

    #查询生产任务列表
    keywordTasks(
        #    关键字
        keyword:String,
        page:Page
    ):TaskPageResult

    #    生产任务统计
    taskStatistics(date:Long):TaskStatistics

    #    生产任务详情
    task(taskId:ID!):Task

    #    库存列表（生产领料）
    stocks(
        stockCondition:StockCondition
    ):[Stock]

    #    任务明细列表
    taskItems(
        taskId:ID!#任务id
    ):[TaskItem]

    #    生产任务操作记录
    taskLogs(taskId:ID!):[TaskLog]

    #   任务详情记录统计
    getFabricationStatistics(taskId:ID):FabricationStatistics

    #任务按钮选项
    fabricationOption(code:Int):[Option]

    #完成任务确认列表弹框
    confirmTaskFinish(taskId:ID!):ConfirmTaskFinishPayload

    #报损出库（区别于其他操作的报损出库）
    pageDamagedOrder(pageDamagedOrderInput:PageDamagedOrderInput,page:Page):DamagedOrderPagePayload

    #报损出库数量统计
    damagedOrderStatistics(damagedOrderStatisticsInput:DamagedOrderStatisticsInput):DamagedOrderStatisticsPayload

}

input DamagedOrderStatisticsInput {
    taskId:ID!
    outOrderType:[Int]!
    outOrderStatus:Int
}

type DamagedOrderStatisticsPayload {
    #待提交
    toSubmit:Int
    #待审核
    toAudit:Int
    #生产中
    producing:Int
    #待出库
    toOutbound:Int
    #已完成
    finished:Int
    #已取消
    canceled:Int
}

extend type Mutation {

    #开始任务
    beginTask(
        beginTask:BeginTask
    ):Boolean

    #    完成任务
    completeTask(
        taskId:ID!#任务id
    ):Boolean

    #    领料申请保存，返回新增id
    addOutOrder(
        outOrder:OutOrder#领料数据
    ):ID

    #    生产入库保存，返回新增id
    addInOrder(
        inOrder:InOrder#领料数据
    ):ID

    #   报损出库新增（区别于其他操作的报损出库）
    createDamagedOrder(createDamagedOrderInput:CreateDamagedOrderInput):ID
    #   报损出库修改
    updateDamagedOrder(updateDamagedOrderInput:UpdateDamagedOrderInput):Boolean

}

#分页对象
type DamagedOrderPagePayload{
    #销售订单列表
    records:[DamagedOrderPayload]
    pageCurrent: Int
    pageSize: Int
    totalRecords: Long
}

type DamagedOrderPayload{
    #出库订单Id
    outOrderId:ID
    #出库类型出库订单类型，150：原料报损、160 半成品报损、170 退货品报损
    outOrderType:Int
    #出库类型名称
    outOrderTypeName:String
    #出库单号
    outOrderCode:String
    #商品类型Id
    commodityTypeId:Int
    #商品类型名称
    commodityTypeName:String
    #客户类型 10 无客户 20 客户分组 30 指定客户
    customerType:Int
    # 客户类型翻译
    customerTypeName:String
    #客户Id
    customerId:Int
    #客户名称
    customerName:String
    #销售时间
    saleTime:Long
    #出库状态Id 出库订单状态，默认待提交，10：待提交、20：待出库、30：部分出库、40：已完成、50：已取消
    outOrderStatus:Int
    #订单状态翻译
    outOrderStatusName:String
    #仓库Id
    warehouseId:Int
    #仓库名称
    warehouseName:String
    #创建人员
    createUserName:String
    #创建时间
    createTime:Long
    #订单备注
    outOrderDescription:String
    #驳回（取消）原因
    errorDescription:String
    #商品信息总价
    totalPrice:BigDecimal
    #商品信息
    commodityList:[OutOrderItemPayload]
    #任务单号
    taskCode:String
    #入库订单Id
    inOrderId:ID
    #入库订单编号
    inOrderCode:String
    #供应商Id
    supplierId:Int
    #供应商名字
    supplierName:String
    #客户配送地址
    customerDistributionName:String
}


input PageDamagedOrderInput{
    #任务id
    taskId:ID!
    #出库类型
    outOrderType:[Int]!
    #出库订单状态
    outOrderStatus:Int
}

input CreateDamagedOrderInput{
    #出库类型
    outOrderType: Int!
    #商品类型
    commodityTypeId:Int!
    #仓库id
    warehouseId:Int!
    #订单备注
    outOrderDescription:String
    #任务id
    taskId:ID!
    #商品信息
    commodityList:[CreateDamagedOrderItemInput]!
}

input CreateDamagedOrderItemInput{
    batchId:Int!
    #商品skuID
    commoditySkuId:Int!
    #小单位数量
    unitQuantity:BigDecimal
    #大单位数量
    totalQuantity:BigDecimal
    #报损原因
    damageReason:String!
    #拍照记录
    photos:[String]!
}

input UpdateDamagedOrderInput{
    #出库订单Id
    outOrderId:ID!
    #仓库名称
    warehouseId:Int!
    #订单备注
    outOrderDescription:String
    #商品信息
    commodityList:[CreateDamagedOrderItemInput]!
}

type ConfirmTaskFinishPayload {
    picking: Picking
    warehousing: Warehousing
    returnMaterial: ReturnMaterial
    damagedOrder: DamagedOrder
}

type Picking {
    rawMaterialUnFinish:Int
    rawMaterial:Int
    accessoriesUnFinish:Int
    accessories:Int
    semiFinishedProductsUnFinish:Int
    semiFinishedProducts:Int
    returnedGoodsUnFinish:Int
    returnedGoods:Int
    undone:Int
}

type Warehousing {
    finishedProductUnFinish:Int
    finishedProduct:Int
    semiFinishedProductsUnFinish:Int
    semiFinishedProducts:Int
    defectiveUnFinish:Int
    defective:Int
    undone:Int
}

type ReturnMaterial {
    rawMaterialUnFinish:Int
    rawMaterial:Int
    accessoriesUnFinish:Int
    accessories:Int
    semiFinishedProductsUnFinish:Int
    semiFinishedProducts:Int
    returnedGoodsUnFinish:Int
    returnedGoods:Int
    undone:Int
    noReturn:Boolean
}

type DamagedOrder {
    rawMaterialUnFinish:Int
    rawMaterial:Int
    semiFinishedProductsUnFinish:Int
    semiFinishedProducts:Int
    returnedGoodsUnFinish:Int
    returnedGoods:Int
    undone:Int
    noDamage:Boolean
}



type FabricationStatistics {
    #生产领料记录
    pickingRecord: Int
    pickingRecordFinishUndone: Boolean
    #生产入库记录
    warehousingRecord: Int
    warehousingRecordUndone: Boolean
    #生产退料记录
    returnMaterial: Int
    returnMaterialUndone:Boolean
    #报损出库记录
    damagedOutOrder: Int
    damagedOutOrderUndone:Boolean
}

#开始任务请求参数
input BeginTask {
    #任务id
    taskId:ID!,
    #正式工人数
    numberActual:Int!
    #零时工人数
    tempWorkerQuantity: Int!
}

#库存列表请求参数
input StockCondition {
    #任务id
    taskId:ID!,
    #商品类型 10原料，20辅料
    commodityType:Int!
}

input InOrder {
    #生产任务id
    taskId:ID!
    #商品类型id
    commodityTypeId:Int!
    #出库订单类型
    inOrderType:Int!
    #备注信息
    inOrderDescription:String
    inOrderItem:[InOrderItem]!
}

#入库明细
input InOrderItem {
    #商品sku id
    commoditySkuId:Int!
    #批次id
    batchId: Int
    #出库库存记录明细id
    outStockRecordItemId: ID
    #单位类型数量（例：kg，个）
    unitQuantity:BigDecimal!
    #总计类型数量（例：件）
    totalQuantity:BigDecimal!
}

#生产任务统计
type TaskStatistics {
    #    待生产数量
    toBeProduced:Int
    #    生产中数量
    inProduction:Int
    #已完成数量
    completed:Int
}

#领料申请保存提交参数
input OutOrder {
    #生产任务id
    taskId:ID!
    #商品类型id
    commodityTypeId: Int!
    #出库订单类型，10：原料领料、20：辅料领料
    outOrderType:Int!
    #备注信息
    outOrderDescription:String
    outOrderItem:[OutOrderItem]!
}

#领料申请明细
input OutOrderItem {
    #商品sku id
    commoditySkuId:Int!
    #批次id
    batchId: Int
    #单位类型数量（例：kg，个）
    unitQuantity:BigDecimal!
    #总计类型数量（例：件）
    totalQuantity:BigDecimal
}

#库存
type Stock {
    #    商品类型id
    commodityTypeId:Int
    #    商品类型名称
    commodityTypeName:String
    #    商品id
    commodityId:Int
    #    商品名称
    commodityName:String
    #    商品sku id
    commoditySkuId:Int
    #    商品规格选项id
    commoditySpecOptionId:[Int]
    #sku文字描述，规格选项文字数组
    skuTextDescription:[String]
    #    客户id
    customerId:Int
    #    客户名称
    customerName:String
    #    客户分组id
    customerGroupId:Int
    #    客户分组名称
    customerGroupName:String
    #    单位类型数量
    stockUnitQuantity:BigDecimal
    #单位类型
    stockUnitType:Int
    #    单位类型名称
    stockUnitTypeName:String
    #    总计类型数量
    stockTotalQuantity:BigDecimal
    #    总计类型
    stockTotalType:Int
    #    总计类型名称
    stockTotalTypeName:String
}

#生产任务详情
type  Task {
    #生产计划id
    planId:ID
    #生产任务id
    taskId:ID
    #任务单号
    taskCode:String
    #    任务状态【10：无状态，计划未发布时任务没有状态、20：待生产、30：生产中、40：已完成、50：已取消】
    taskStatus:Int
    #    任务状态名称
    taskStatusName:String
    #    生产组长id
    leaderId:Int
    #    生产组长名称
    leaderName:String
    #生产线
    line:Int
    #    计划人数
    numberPlan:Int
    #    正式工人数
    numberActual:Int
    #    临时工人数
    tempWorkerQuantity: Int
    #     取消原因
    cancelReason:String
    #    生产计划
    plan:Plan
    #    生产任务明细
    taskItems:[TaskItem]
}

#生产操作记录
type TaskLog {
    #生产任务操作日志id
    taskLogId:Int
    #生产计划id
    planId:ID
    #生产任务id
    taskId:ID
    #生产任务操作日志类型【10：开始任务、20：原料领料、30：辅料领料、40：成品入库、50：结束任务】
    taskLogType:Int
    #生产任务操作类型枚举文字
    taskLogTypeText:String
    #生产任务操作日志备注
    taskLogDescription:String
    #创建时间
    createTime:Long
    #创建人id
    createBy:Int
    #创建人名称
    createUserName:String
}

#生产任务明细
type TaskItem {
    #    生产任务明细id
    taskItemId:ID
    #生产计划id
    planId:ID
    #    生产任务id
    taskId:ID
    #    商品id
    commodityId:Int
    #    商品名称
    commodityName:String
    #    bom id
    commodityBomId:Int
    #    商品sku id
    commoditySkuId:Int
    #    商品规格选项id
    commoditySpecOptionId:[Int]
    #    sku文字描述，规格选项文字数组
    skuTextDescription:[String]
    #    期望数量
    expectNum:BigDecimal
    #    已生产数量，默认0
    completedNum:BigDecimal
    #单位数量
    unitQuantity:BigDecimal
    #单位类型
    unitType:Int
    #    单位类型名称
    unitTypeName:String
    #    总计类型
    totalType:Int
    #    总计类型名称
    totalTypeName:String
    #    变更通知,0 没有通知  10 通知未读  20 通知已处理  30 通知已忽略
    planChangeNotice: Int

    # 变更数量
    changeQuantity: BigDecimal
    # 变更类型
    changeType: Int
    #规格要求
    specificationLabel:String
    #包装要求
    packageLabel:String
    #品质要求
    quantityLabel:String
}

#生产计划
type Plan {
    #    计划id
    planId:ID
    #    计划单号
    planCode:String
    #    计划状态【10：待发布、20：待生产、30：生产中、40：已完成、50：已取消】
    planStatus:Int
    #客户类型
    customerType: Int
    #客户id
    customerId:Int
    #    客户名称
    customerName:String
    #    配送地址id
    customerDistributionId:Int
    #    配送地址名称
    customerDistributionName:String
    #    仓库id
    warehouseId:Int
    #    仓库名称
    warehouseName:String
    #生产日期
    planDate:Long
    #    计划开始时间
    planStartTime:Long
    #    计划结束时间
    planEndTime:Long
    #    备注
    planDescription:String
    # 计划类型
    createType:Int
}

#分页对象
type TaskPageResult {
    records: [Tasks]
    pageCurrent: Int
    pageSize: Int
    totalRecords: Long
}

#生产任务列表
type Tasks{
    #    生产任务id
    taskId:ID
    #    任务状态【10：无状态、20：待生产、30：生产中、40：已完成、50：已取消】
    taskStatus:Int
    #    任务状态名称
    taskStatusName:String
    #    任务单号
    taskCode:String
    #开始时间
    startTime:Long
    #    结束时间
    endTime:Long
    #    生产进度
    schedule:String
    #    总预期数量
    totalExpectNum:Int
    #    总实际生产数量
    totalCompletedNum:Int
    #    客户名称
    customerName:String
    #    仓库名称
    warehouseName:String
    #    任务明细
    taskItems:[TaskItems]
}

#生产任务列表商品信息
type TaskItems {
    #    商品名称
    commodityName:String
    #    sku选项
    skuTextDescription:[String]
    #    总计类型名称
    totalTypeName:String
    #    期望数量
    expectNum:BigDecimal
    #    变更标识,0 没有通知  10 通知未读  20 通知已处理  30 通知已忽略
    planChangeNotice: Int
}

#生产任务列表查询
input TaskCondition{
    #    时间 yyyy-MM-dd
    date:Long
    #    任务状态
    taskStatus:Int
}
