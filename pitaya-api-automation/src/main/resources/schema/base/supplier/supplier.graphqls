type SupplierPayload{
    supplierId:Int
    supplierName:String
    supplierShortName:String
    commodityTypeId:Int
    commodityType:String
    phoneNum:String
    supplierAddress:String
    houseNum:String
    remark:String
    createTime:Long
    tfn:String
}

input SupplierInput{
    supplierId:Int
    supplierName:String
    supplierShortName:String
    commodityTypeId:Int
    commodityType:String
    phoneNum:String
    supplierAddress:String
    houseNum:String
    remark:String
    tfn:String
}

#客户分页实体
type SupplierPagePayload{
    records: [SupplierPayload]
    pageCurrent:Int
    pageSize:Int
    totalRecords:Long
}
input SupplierConditionInput{
    keyword:String
    commodityTypeIdList:[Int]
}

extend type Query {
    supplierPages(page:Page,supplierCondition:SupplierConditionInput):SupplierPagePayload
    supplier(supplierId:Int):SupplierPayload
    suppliers(supplierCondition:SupplierConditionInput):[SupplierPayload]!
}

extend type Mutation {
    # 创建供应商
    createSupplier(supplierInput:SupplierInput):Int
    # 更新供应商
    updateSupplier(supplierInput:SupplierInput):Int
    # 删除供应商
    deleteSupplier(supplierId:Int):Int
}
